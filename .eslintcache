[{"E:\\js\\Harry\\myapp\\src\\App.js":"1","E:\\js\\Harry\\myapp\\src\\index.js":"2"},{"size":3600,"mtime":1609337776495,"results":"3","hashOfConfig":"4"},{"size":535,"mtime":1609331583724,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"18wku1r",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\js\\Harry\\myapp\\src\\App.js",["11","12","13","14","15","16","17"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Table, Tag, Space, Button, Modal, Input } from \"antd\";\nimport { Formik, Form } from \"formik\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [change, setChange] = useState({ title: \"\", author: \"\" });\n  const [isActive, setIsActive] = useState(false);\n  const [list, setList] = useState([]);\n  const onHandleDelete = async (id) => {\n    console.log(\"babe minh\", id);\n    await axios.delete(`http://localhost:3000/product/${id}`);\n    axios\n      .get(\"http://localhost:3000/product\")\n      .then(function (response) {\n        // handle success\n        console.log(response);\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  };\n  const columns = [\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"title\",\n      dataIndex: \"title\",\n      key: \"title\",\n    },\n    {\n      title: \"author\",\n      dataIndex: \"author\",\n      key: \"author\",\n    },\n    {\n      title: \"author\",\n      dataIndex: \"author\",\n      key: \"author\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Button type=\"primary\" onClick={showModal}>\n            Edit\n          </Button>\n          {console.log(record)}\n          <Button onClick={() => onHandleDelete(record.id)} type=\"primary\">\n            Delete\n          </Button>\n          <Modal\n            title=\"Basic Modal\"\n            visible={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            {/* <p>{record.title}</p> */}\n            <Formik\n              initialValues={record}\n              onSubmit={(value) => handleSubmit2(value)}\n              children={(props) => {\n                const {\n                  values,\n                  setFieldValue,\n                  setValues,\n                  handleSubmit,\n                } = props;\n                console.log(props);\n                return (\n                  <Form onSubmit={handleSubmit}>\n                    <Input\n                      name=\"title\"\n                      onChange={(e) => setFieldValue(\"title\", e.target.value)}\n                      // onBlur={handleBlur}\n                      value={values.title}\n                    />\n                    {/* {errors.password && touched.password && errors.password} */}\n                    <Button htmlType=\"Submit\" type=\"primary\">\n                      Submit\n                    </Button>\n                  </Form>\n                );\n              }}\n            />\n          </Modal>\n        </Space>\n      ),\n    },\n  ];\n\n  const handleSubmit2 = (value) => {\n    console.log(\"value\", value);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3000/product\")\n      .then(function (response) {\n        // handle success\n        console.log(response);\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }, [list]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Table dataSource={data} columns={columns} />\n        <Button type=\"primary\" onClick={showModal}>\n          Open Modal\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\js\\Harry\\myapp\\src\\index.js",[],{"ruleId":"18","severity":1,"message":"19","line":4,"column":17,"nodeType":"20","messageId":"21","endLine":4,"endColumn":20},{"ruleId":"18","severity":1,"message":"22","line":9,"column":10,"nodeType":"20","messageId":"21","endLine":9,"endColumn":16},{"ruleId":"18","severity":1,"message":"23","line":9,"column":18,"nodeType":"20","messageId":"21","endLine":9,"endColumn":27},{"ruleId":"18","severity":1,"message":"24","line":10,"column":10,"nodeType":"20","messageId":"21","endLine":10,"endColumn":18},{"ruleId":"18","severity":1,"message":"25","line":10,"column":20,"nodeType":"20","messageId":"21","endLine":10,"endColumn":31},{"ruleId":"18","severity":1,"message":"26","line":11,"column":16,"nodeType":"20","messageId":"21","endLine":11,"endColumn":23},{"ruleId":"18","severity":1,"message":"27","line":70,"column":19,"nodeType":"20","messageId":"21","endLine":70,"endColumn":28},"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'isActive' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","'setList' is assigned a value but never used.","'setValues' is assigned a value but never used."]